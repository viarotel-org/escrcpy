import{_ as i,c as e,o as l,aj as o}from"./chunks/framework.MtKKuSHf.js";const m=JSON.parse('{"title":"Preferences","description":"","frontmatter":{"title":"Preferences"},"headers":[],"relativePath":"guide/preferences.md","filePath":"en/guide/preferences.md","lastUpdated":1747291551000}'),a={name:"guide/preferences.md"},r=o('<h1 id="preferences" tabindex="-1">Preferences <a class="header-anchor" href="#preferences" aria-label="Permalink to &quot;Preferences&quot;">​</a></h1><p>Continuously improving. Currently supports the following common configurations</p><h2 id="general" tabindex="-1">General <a class="header-anchor" href="#general" aria-label="Permalink to &quot;General&quot;">​</a></h2><ul><li>Theme</li><li>Language</li><li>File storage path</li><li>Adb path</li><li>Scrcpy path</li><li>Gnirehtet path</li><li>Scrcpy parameters</li><li>Gnirehtet parameters</li><li>Auto-connect device</li><li>Auto-execute mirroring</li><li>Gnirehtet fix</li><li>Debug</li><li>Floating control bar</li></ul><h2 id="video-control" tabindex="-1">Video Control <a class="header-anchor" href="#video-control" aria-label="Permalink to &quot;Video Control&quot;">​</a></h2><ul><li>Disable video forwarding</li><li>Maximum size</li><li>Video bitrate</li><li>Refresh rate</li><li>Video codec</li><li>Display orientation</li><li>Rotation angle</li><li>Screen cropping</li><li>Monitor</li><li>Video buffer</li><li>Receiver (v4l2) buffer</li></ul><h2 id="device-control" tabindex="-1">Device Control <a class="header-anchor" href="#device-control" aria-label="Permalink to &quot;Device Control&quot;">​</a></h2><ul><li>Show touch points</li><li>Keep awake</li><li>Turn off screen during control</li><li>Turn off screen after control</li><li>Disable auto screen on during control</li><li>Simulate auxiliary display</li></ul><h2 id="window-control" tabindex="-1">Window Control <a class="header-anchor" href="#window-control" aria-label="Permalink to &quot;Window Control&quot;">​</a></h2><ul><li>Window width</li><li>Window height</li><li>Window X-coordinate</li><li>Window Y-coordinate</li><li>Borderless mode</li><li>Fullscreen mode</li><li>Always on top</li><li>Disable screensaver</li></ul><h2 id="audio-control" tabindex="-1">Audio Control <a class="header-anchor" href="#audio-control" aria-label="Permalink to &quot;Audio Control&quot;">​</a></h2><ul><li>Disable audio forwarding</li><li>Keep device audio</li><li>Audio source</li><li>Audio codec</li><li>Audio bitrate</li><li>Audio buffer</li><li>Audio output buffer</li></ul><h2 id="audio-video-recording" tabindex="-1">Audio/Video Recording <a class="header-anchor" href="#audio-video-recording" aria-label="Permalink to &quot;Audio/Video Recording&quot;">​</a></h2><ul><li>Record video format</li><li>Record video orientation</li><li>Recording duration</li><li>Disable video playback</li><li>Disable audio playback</li></ul><h2 id="input-control" tabindex="-1">Input Control <a class="header-anchor" href="#input-control" aria-label="Permalink to &quot;Input Control&quot;">​</a></h2><ul><li>Mouse mode</li><li>Mouse binding</li><li>Keyboard mode</li><li>Keyboard injection method</li><li>Gamepad</li></ul><h2 id="camera-control" tabindex="-1">Camera Control <a class="header-anchor" href="#camera-control" aria-label="Permalink to &quot;Camera Control&quot;">​</a></h2><ul><li>Camera source</li><li>Camera size</li><li>Camera ratio</li><li>Camera frame rate</li></ul>',18),t=[r];function n(d,c,u,s,h,f){return l(),e("div",null,t)}const b=i(a,[["render",n]]);export{m as __pageData,b as default};
