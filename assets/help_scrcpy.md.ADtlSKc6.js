import{_ as e,c as a,o as s,aj as i}from"./chunks/framework.MtKKuSHf.js";const k=JSON.parse('{"title":"Scrcpy","description":"","frontmatter":{"title":"Scrcpy"},"headers":[],"relativePath":"help/scrcpy.md","filePath":"en/help/scrcpy.md","lastUpdated":1747291551000}'),t={name:"help/scrcpy.md"},o=i(`<h1 id="scrcpy" tabindex="-1">Scrcpy <a class="header-anchor" href="#scrcpy" aria-label="Permalink to &quot;Scrcpy&quot;">​</a></h1><p>Here are the common reported problems and their status.</p><p>If you encounter any error, the first step is to upgrade to the latest version.</p><h2 id="adb-and-usb-issues" tabindex="-1"><code>adb</code> and USB issues <a class="header-anchor" href="#adb-and-usb-issues" aria-label="Permalink to &quot;\`adb\` and USB issues&quot;">​</a></h2><p><code>scrcpy</code> execute <code>adb</code> commands to initialize the connection with the device. If <code>adb</code> fails, then scrcpy will not work.</p><p>This is typically not a bug in <em>scrcpy</em>, but a problem in your environment.</p><h3 id="adb-not-found" tabindex="-1"><code>adb</code> not found <a class="header-anchor" href="#adb-not-found" aria-label="Permalink to &quot;\`adb\` not found&quot;">​</a></h3><p>You need <code>adb</code> accessible from your <code>PATH</code>.</p><p>On Windows, the current directory is in your <code>PATH</code>, and <code>adb.exe</code> is included in the release, so it should work out-of-the-box.</p><h3 id="device-not-detected" tabindex="-1">Device not detected <a class="header-anchor" href="#device-not-detected" aria-label="Permalink to &quot;Device not detected&quot;">​</a></h3><blockquote><pre><code>ERROR: Could not find any ADB device
</code></pre></blockquote><p>Check that you correctly enabled <a href="https://developer.android.com/studio/command-line/adb.html#Enabling" target="_blank" rel="noreferrer">adb debugging</a>.</p><p>Your device must be detected by <code>adb</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>adb devices</span></span></code></pre></div><p>If your device is not detected, you may need some <a href="https://developer.android.com/studio/run/oem-usb.html" target="_blank" rel="noreferrer">drivers</a> (on Windows). There is a separate <a href="https://developer.android.com/studio/run/win-usb" target="_blank" rel="noreferrer">USB driver for Google devices</a>.</p><h3 id="device-unauthorized" tabindex="-1">Device unauthorized <a class="header-anchor" href="#device-unauthorized" aria-label="Permalink to &quot;Device unauthorized&quot;">​</a></h3><blockquote><pre><code>ERROR: Device is unauthorized:
ERROR:     --&gt;   (usb)  0123456789abcdef          unauthorized
ERROR: A popup should open on the device to request authorization.
</code></pre></blockquote><p>When connecting, a popup should open on the device. You must authorize USB debugging.</p><p>If it does not open, check <a href="https://stackoverflow.com/questions/23081263/adb-android-device-unauthorized" target="_blank" rel="noreferrer">stackoverflow</a>.</p><h3 id="several-devices-connected" tabindex="-1">Several devices connected <a class="header-anchor" href="#several-devices-connected" aria-label="Permalink to &quot;Several devices connected&quot;">​</a></h3><p>If several devices are connected, you will encounter this error:</p><blockquote><pre><code>ERROR: Multiple (2) ADB devices:
ERROR:     --&gt;   (usb)  0123456789abcdef                device  Nexus_5
ERROR:     --&gt; (tcpip)  192.168.1.5:5555                device  GM1913
ERROR: Select a device via -s (--serial), -d (--select-usb) or -e (--select-tcpip)
</code></pre></blockquote><p>In that case, you can either provide the identifier of the device you want to mirror:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0123456789abcdef</span></span></code></pre></div><p>Or request the single USB (or TCP/IP) device:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # USB device</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # TCP/IP device</span></span></code></pre></div><p>Note that if your device is connected over TCP/IP, you might get this message:</p><blockquote><pre><code>adb: error: more than one device/emulator
ERROR: &quot;adb reverse&quot; returned with value 1
WARN: &#39;adb reverse&#39; failed, fallback to &#39;adb forward&#39;
</code></pre></blockquote><p>This is expected (due to a bug on old Android versions, see <a href="https://github.com/Genymobile/scrcpy/issues/5" target="_blank" rel="noreferrer">#5</a>), but in that case, scrcpy fallbacks to a different method, which should work.</p><h3 id="conflicts-between-adb-versions" tabindex="-1">Conflicts between adb versions <a class="header-anchor" href="#conflicts-between-adb-versions" aria-label="Permalink to &quot;Conflicts between adb versions&quot;">​</a></h3><blockquote><pre><code>adb server version (41) doesn&#39;t match this client (39); killing...
</code></pre></blockquote><p>This error occurs when you use several <code>adb</code> versions simultaneously. You must find the program using a different <code>adb</code> version, and use the same <code>adb</code> version everywhere.</p><p>You could overwrite the <code>adb</code> binary in the other program, or ask <em>scrcpy</em> to use a specific <code>adb</code> binary, by setting the <code>ADB</code> environment variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># in bash</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ADB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/path/to/your/adb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span></span></code></pre></div><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ADB</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C:\\path\\</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\your\\adb.exe</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scrcpy</span></span></code></pre></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># in PowerShell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ADB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;C:\\path\\to\\your\\adb.exe&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scrcpy</span></span></code></pre></div><h3 id="device-disconnected" tabindex="-1">Device disconnected <a class="header-anchor" href="#device-disconnected" aria-label="Permalink to &quot;Device disconnected&quot;">​</a></h3><p>If <em>scrcpy</em> stops itself with the warning &quot;Device disconnected&quot;, then the <code>adb</code> connection has been closed.</p><p>Try with another USB cable or plug it into another USB port. See <a href="https://github.com/Genymobile/scrcpy/issues/281" target="_blank" rel="noreferrer">#281</a> and <a href="https://github.com/Genymobile/scrcpy/issues/283" target="_blank" rel="noreferrer">#283</a>.</p><h2 id="otg-issues-on-windows" tabindex="-1">OTG issues on Windows <a class="header-anchor" href="#otg-issues-on-windows" aria-label="Permalink to &quot;OTG issues on Windows&quot;">​</a></h2><p>On Windows, if <code>scrcpy --otg</code> (or <code>--keyboard=aoa</code>/<code>--mouse=aoa</code>) results in:</p><blockquote><pre><code>ERROR: Could not find any USB device
</code></pre></blockquote><p>(or if only unrelated USB devices are detected), there might be drivers issues.</p><p>Please read <a href="https://github.com/Genymobile/scrcpy/issues/3654" target="_blank" rel="noreferrer">#3654</a>, in particular <a href="https://github.com/Genymobile/scrcpy/issues/3654#issuecomment-1369278232" target="_blank" rel="noreferrer">this comment</a> and <a href="https://github.com/Genymobile/scrcpy/issues/3654#issuecomment-1369295011" target="_blank" rel="noreferrer">the next one</a>.</p><h2 id="control-issues" tabindex="-1">Control issues <a class="header-anchor" href="#control-issues" aria-label="Permalink to &quot;Control issues&quot;">​</a></h2><h3 id="mouse-and-keyboard-do-not-work" tabindex="-1">Mouse and keyboard do not work <a class="header-anchor" href="#mouse-and-keyboard-do-not-work" aria-label="Permalink to &quot;Mouse and keyboard do not work&quot;">​</a></h3><p>On some devices, you may need to enable an option to allow <a href="https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323" target="_blank" rel="noreferrer">simulating input</a>. In developer options, enable:</p><blockquote><p><strong>USB debugging (Security settings)</strong><br><em>Allow granting permissions and simulating input via USB debugging</em></p></blockquote><p>Rebooting the device is necessary once this option is set.</p><h3 id="special-characters-do-not-work" tabindex="-1">Special characters do not work <a class="header-anchor" href="#special-characters-do-not-work" aria-label="Permalink to &quot;Special characters do not work&quot;">​</a></h3><p>The default text injection method is <a href="https://github.com/Genymobile/scrcpy/issues?q=is%3Aopen+is%3Aissue+label%3Aunicode" target="_blank" rel="noreferrer">limited to ASCII characters</a>. A trick allows to also inject some <a href="https://blog.rom1v.com/2018/03/introducing-scrcpy/#handle-accented-characters" target="_blank" rel="noreferrer">accented characters</a>, but that&#39;s all. See <a href="https://github.com/Genymobile/scrcpy/issues/37" target="_blank" rel="noreferrer">#37</a>.</p><p>To avoid the problem, <a href="/reference/scrcpy/keyboard#physical-keyboard-simulation">change the keyboard mode to simulate a physical keyboard</a>.</p><h2 id="client-issues" tabindex="-1">Client issues <a class="header-anchor" href="#client-issues" aria-label="Permalink to &quot;Client issues&quot;">​</a></h2><h3 id="issue-with-wayland" tabindex="-1">Issue with Wayland <a class="header-anchor" href="#issue-with-wayland" aria-label="Permalink to &quot;Issue with Wayland&quot;">​</a></h3><p>By default, SDL uses x11 on Linux. The <a href="https://wiki.libsdl.org/FAQUsingSDL#how_do_i_choose_a_specific_video_driver" target="_blank" rel="noreferrer">video driver</a> can be changed via the <code>SDL_VIDEODRIVER</code> environment variable:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDL_VIDEODRIVER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wayland</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span></span></code></pre></div><p>On some distributions (at least Fedora), the package <code>libdecor</code> must be installed manually.</p><p>See issues <a href="https://github.com/Genymobile/scrcpy/issues/2554" target="_blank" rel="noreferrer">#2554</a> and <a href="https://github.com/Genymobile/scrcpy/issues/2559" target="_blank" rel="noreferrer">#2559</a>.</p><h3 id="kwin-compositor-crashes" tabindex="-1">KWin compositor crashes <a class="header-anchor" href="#kwin-compositor-crashes" aria-label="Permalink to &quot;KWin compositor crashes&quot;">​</a></h3><p>On Plasma Desktop, compositor is disabled while <em>scrcpy</em> is running.</p><p>As a workaround, <a href="https://github.com/Genymobile/scrcpy/issues/114#issuecomment-378778613" target="_blank" rel="noreferrer">disable &quot;Block compositing&quot;</a>.</p><h2 id="crashes" tabindex="-1">Crashes <a class="header-anchor" href="#crashes" aria-label="Permalink to &quot;Crashes&quot;">​</a></h2><h3 id="exception" tabindex="-1">Exception <a class="header-anchor" href="#exception" aria-label="Permalink to &quot;Exception&quot;">​</a></h3><p>If you get any exception related to <code>MediaCodec</code>:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ERROR: Exception on thread Thread[main,5,main]</span></span>
<span class="line"><span>java.lang.IllegalStateException</span></span>
<span class="line"><span>        at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)</span></span></code></pre></div><p>then try with another <a href="/reference/scrcpy/video#encoder">encoder</a>.</p>`,66),n=[o];function r(c,d,l,h,p,u){return s(),a("div",null,n)}const g=e(t,[["render",r]]);export{k as __pageData,g as default};
