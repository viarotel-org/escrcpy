import{_ as s,c as i,o as a,aj as e}from"./chunks/framework.MtKKuSHf.js";const g=JSON.parse('{"title":"Build scrcpy","description":"","frontmatter":{},"headers":[],"relativePath":"reference/scrcpy/build.md","filePath":"en/reference/scrcpy/build.md","lastUpdated":1747291551000}'),n={name:"reference/scrcpy/build.md"},l=e(`<h1 id="build-scrcpy" tabindex="-1">Build scrcpy <a class="header-anchor" href="#build-scrcpy" aria-label="Permalink to &quot;Build scrcpy&quot;">​</a></h1><p>Here are the instructions to build <em>scrcpy</em> (client and server).</p><p>If you just want to build and install the latest release, follow the simplified process described in <a href="/reference/scrcpy/linux">doc/linux.md</a>.</p><h2 id="branches" tabindex="-1">Branches <a class="header-anchor" href="#branches" aria-label="Permalink to &quot;Branches&quot;">​</a></h2><p>There are two main branches:</p><ul><li><code>master</code>: contains the latest release. It is the home page of the project on GitHub.</li><li><code>dev</code>: the current development branch. Every commit present in <code>dev</code> will be in the next release.</li></ul><p>If you want to contribute code, please base your commits on the latest <code>dev</code> branch.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>You need <a href="https://developer.android.com/studio/command-line/adb.html" target="_blank" rel="noreferrer">adb</a>. It is available in the <a href="https://developer.android.com/studio/releases/platform-tools.html" target="_blank" rel="noreferrer">Android SDK platform tools</a>, or packaged in your distribution (<code>adb</code>).</p><p>On Windows, download the <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noreferrer">platform-tools</a> and extract the following files to a directory accessible from your <code>PATH</code>:</p><ul><li><code>adb.exe</code></li><li><code>AdbWinApi.dll</code></li><li><code>AdbWinUsbApi.dll</code></li></ul><p>It is also available in scrcpy releases.</p><p>The client requires <a href="https://en.wikipedia.org/wiki/FFmpeg" target="_blank" rel="noreferrer">FFmpeg</a> and <a href="https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer" target="_blank" rel="noreferrer">LibSDL2</a>. Just follow the instructions.</p><h2 id="system-specific-steps" tabindex="-1">System-specific steps <a class="header-anchor" href="#system-specific-steps" aria-label="Permalink to &quot;System-specific steps&quot;">​</a></h2><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><p>Install the required packages from your package manager.</p><h4 id="debian-ubuntu" tabindex="-1">Debian/Ubuntu <a class="header-anchor" href="#debian-ubuntu" aria-label="Permalink to &quot;Debian/Ubuntu&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># runtime dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libsdl2-2.0-0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb-1.0-0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># client build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja-build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libsdl2-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 libavcodec-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavdevice-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavformat-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavutil-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 libswresample-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb-1.0-0-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># server build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-17-jdk</span></span></code></pre></div><p>On old versions (like Ubuntu 16.04), <code>meson</code> is too old. In that case, install it from <code>pip3</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span></span></code></pre></div><h4 id="fedora" tabindex="-1">Fedora <a class="header-anchor" href="#fedora" aria-label="Permalink to &quot;Fedora&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># enable RPM fusion free</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %fedora</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.noarch.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># client build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SDL2-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffms2-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb1-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavdevice-free-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># server build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java-devel</span></span></code></pre></div><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><h4 id="cross-compile-from-linux" tabindex="-1">Cross-compile from Linux <a class="header-anchor" href="#cross-compile-from-linux" aria-label="Permalink to &quot;Cross-compile from Linux&quot;">​</a></h4><p>This is the preferred method (and the way the release is built).</p><p>From <em>Debian</em>, install <em>mingw</em>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libz-mingw-w64-dev</span></span></code></pre></div><p>You also need the JDK to build the server:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-17-jdk</span></span></code></pre></div><p>Then generate the releases:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./release.sh</span></span></code></pre></div><p>It will generate win32 and win64 releases into <code>dist/</code>.</p><h4 id="in-msys2" tabindex="-1">In MSYS2 <a class="header-anchor" href="#in-msys2" aria-label="Permalink to &quot;In MSYS2&quot;">​</a></h4><p>From Windows, you need <a href="http://www.msys2.org/" target="_blank" rel="noreferrer">MSYS2</a> to build the project. From an MSYS2 terminal, install the required packages:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># runtime dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-x86_64-SDL2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-libusb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># client build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-x86_64-make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-pkg-config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-meson</span></span></code></pre></div><p>For a 32 bits version, replace <code>x86_64</code> by <code>i686</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># runtime dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-i686-SDL2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-libusb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># client build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-i686-make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-pkg-config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-meson</span></span></code></pre></div><p>Java (&gt;= 7) is not available in MSYS2, so if you plan to build the server, install it manually and make it available from the <code>PATH</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="mac-os" tabindex="-1">Mac OS <a class="header-anchor" href="#mac-os" aria-label="Permalink to &quot;Mac OS&quot;">​</a></h3><p>Install the packages with <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># runtime dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sdl2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># client build dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span></span></code></pre></div><p>Additionally, if you want to build the server, install Java 17 from Caskroom, and make it available from the <code>PATH</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homebrew/cask-versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adoptopenjdk/openjdk/adoptopenjdk17</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/libexec/java_home</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.17</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h3><p>See <a href="https://github.com/pierlon/scrcpy-docker" target="_blank" rel="noreferrer">pierlon/scrcpy-docker</a>.</p><h2 id="common-steps" tabindex="-1">Common steps <a class="header-anchor" href="#common-steps" aria-label="Permalink to &quot;Common steps&quot;">​</a></h2><p><strong>As a non-root user</strong>, clone the project:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Genymobile/scrcpy</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scrcpy</span></span></code></pre></div><h3 id="build" tabindex="-1">Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;">​</a></h3><p>You may want to build only the client: the server binary, which will be pushed to the Android device, does not depend on your system and architecture. In that case, use the <a href="#option-2-use-prebuilt-server">prebuilt server</a> (so you will not need Java or the Android SDK).</p><h4 id="option-1-build-everything-from-sources" tabindex="-1">Option 1: Build everything from sources <a class="header-anchor" href="#option-1-build-everything-from-sources" aria-label="Permalink to &quot;Option 1: Build everything from sources&quot;">​</a></h4><p>Install the <a href="https://developer.android.com/studio/index.html" target="_blank" rel="noreferrer">Android SDK</a> (<em>Android Studio</em>), and set <code>ANDROID_SDK_ROOT</code> to its directory. For example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_SDK_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Android/Sdk</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mac</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_SDK_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Library/Android/sdk</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ANDROID_SDK_ROOT=%LOCALAPPDATA%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ndroid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dk</span></span></code></pre></div><p>Then, build:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --buildtype=release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --strip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Db_lto=true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # DO NOT RUN AS ROOT</span></span></code></pre></div><p><em>Note: <code>ninja</code> <a href="https://github.com/Genymobile/scrcpy/commit/4c49b27e9f6be02b8e63b508b60535426bd0291a" target="_blank" rel="noreferrer">must</a> be run as a non-root user (only <code>ninja install</code> must be run as root).</em></p><h4 id="option-2-use-prebuilt-server" tabindex="-1">Option 2: Use prebuilt server <a class="header-anchor" href="#option-2-use-prebuilt-server" aria-label="Permalink to &quot;Option 2: Use prebuilt server&quot;">​</a></h4><ul><li><a href="https://github.com/Genymobile/scrcpy/releases/download/v3.2/scrcpy-server-v3.2" target="_blank" rel="noreferrer"><code>scrcpy-server-v3.2</code></a><br><sub>SHA-256: <code>b920e0ea01936bf2482f4ba2fa985c22c13c621999e3d33b45baa5acfc1ea3d0</code></sub></li></ul><p>Download the prebuilt server somewhere, and specify its path during the Meson configuration:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --buildtype=release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --strip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Db_lto=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -Dprebuilt_server=/path/to/scrcpy-server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # DO NOT RUN AS ROOT</span></span></code></pre></div><p>The server only works with a matching client version (this server works with the <code>master</code> branch).</p><h3 id="run-without-installing" tabindex="-1">Run without installing: <a class="header-anchor" href="#run-without-installing" aria-label="Permalink to &quot;Run without installing:&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><h3 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h3><p>After a successful build, you can install <em>scrcpy</em> on the system:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # without sudo on Windows</span></span></code></pre></div><p>This installs several files:</p><ul><li><code>/usr/local/bin/scrcpy</code> (main app)</li><li><code>/usr/local/share/scrcpy/scrcpy-server</code> (server to push to the device)</li><li><code>/usr/local/share/man/man1/scrcpy.1</code> (manpage)</li><li><code>/usr/local/share/icons/hicolor/256x256/apps/icon.png</code> (app icon)</li><li><code>/usr/local/share/zsh/site-functions/_scrcpy</code> (zsh completion)</li><li><code>/usr/local/share/bash-completion/completions/scrcpy</code> (bash completion)</li></ul><p>You can then run <code>scrcpy</code>.</p><h3 id="uninstall" tabindex="-1">Uninstall <a class="header-anchor" href="#uninstall" aria-label="Permalink to &quot;Uninstall&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # without sudo on Windows</span></span></code></pre></div>`,72),t=[l];function h(p,r,k,d,o,c){return a(),i("div",null,t)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};
