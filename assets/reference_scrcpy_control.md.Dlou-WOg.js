import{_ as e,c as a,o as s,aj as i}from"./chunks/framework.MtKKuSHf.js";const u=JSON.parse('{"title":"Control","description":"","frontmatter":{},"headers":[],"relativePath":"reference/scrcpy/control.md","filePath":"en/reference/scrcpy/control.md","lastUpdated":1747291551000}'),t={name:"reference/scrcpy/control.md"},o=i(`<h1 id="control" tabindex="-1">Control <a class="header-anchor" href="#control" aria-label="Permalink to &quot;Control&quot;">​</a></h1><h2 id="read-only" tabindex="-1">Read-only <a class="header-anchor" href="#read-only" aria-label="Permalink to &quot;Read-only&quot;">​</a></h2><p>To disable controls (everything which can interact with the device: input keys, mouse events, drag&amp;drop files):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-control</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # short version</span></span></code></pre></div><h2 id="keyboard-and-mouse" tabindex="-1">Keyboard and mouse <a class="header-anchor" href="#keyboard-and-mouse" aria-label="Permalink to &quot;Keyboard and mouse&quot;">​</a></h2><p>Read <a href="/reference/scrcpy/keyboard">keyboard</a> and <a href="/reference/scrcpy/mouse">mouse</a>.</p><h2 id="control-only" tabindex="-1">Control only <a class="header-anchor" href="#control-only" aria-label="Permalink to &quot;Control only&quot;">​</a></h2><p>To control the device without mirroring:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-audio</span></span></code></pre></div><p>By default, the mouse is disabled when video playback is turned off.</p><p>To control the device using a relative mouse, enable UHID mouse mode:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-audio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=uhid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-audio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -M</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # short version</span></span></code></pre></div><p>To also use a UHID keyboard, set it explicitly:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-audio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=uhid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keyboard=uhid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-audio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -MK</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # short version</span></span></code></pre></div><p>To use AOA instead (over USB only):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-audio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keyboard=aoa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=aoa</span></span></code></pre></div><h2 id="copy-paste" tabindex="-1">Copy-paste <a class="header-anchor" href="#copy-paste" aria-label="Permalink to &quot;Copy-paste&quot;">​</a></h2><p>Any time the Android clipboard changes, it is automatically synchronized to the computer clipboard.</p><p>Any <kbd>Ctrl</kbd> shortcut is forwarded to the device. In particular:</p><ul><li><kbd>Ctrl</kbd>+<kbd>c</kbd> typically copies</li><li><kbd>Ctrl</kbd>+<kbd>x</kbd> typically cuts</li><li><kbd>Ctrl</kbd>+<kbd>v</kbd> typically pastes (after computer-to-device clipboard synchronization)</li></ul><p>This typically works as you expect.</p><p>The actual behavior depends on the active application though. For example, <em>Termux</em> sends SIGINT on <kbd>Ctrl</kbd>+<kbd>c</kbd> instead, and <em>K-9 Mail</em> composes a new message.</p><p>To copy, cut and paste in such cases (but only supported on Android &gt;= 7):</p><ul><li><kbd>MOD</kbd>+<kbd>c</kbd> injects <code>COPY</code></li><li><kbd>MOD</kbd>+<kbd>x</kbd> injects <code>CUT</code></li><li><kbd>MOD</kbd>+<kbd>v</kbd> injects <code>PASTE</code> (after computer-to-device clipboard synchronization)</li></ul><p>In addition, <kbd>MOD</kbd>+<kbd>Shift</kbd>+<kbd>v</kbd> injects the computer clipboard text as a sequence of key events. This is useful when the component does not accept text pasting (for example in <em>Termux</em>), but it can break non-ASCII content.</p><p><strong>WARNING:</strong> Pasting the computer clipboard to the device (either via <kbd>Ctrl</kbd>+<kbd>v</kbd> or <kbd>MOD</kbd>+<kbd>v</kbd>) copies the content into the Android clipboard. As a consequence, any Android application could read its content. You should avoid pasting sensitive content (like passwords) that way.</p><p>Some Android devices do not behave as expected when setting the device clipboard programmatically. An option <code>--legacy-paste</code> is provided to change the behavior of <kbd>Ctrl</kbd>+<kbd>v</kbd> and <kbd>MOD</kbd>+<kbd>v</kbd> so that they also inject the computer clipboard text as a sequence of key events (the same way as <kbd>MOD</kbd>+<kbd>Shift</kbd>+<kbd>v</kbd>).</p><p>To disable automatic clipboard synchronization, use <code>--no-clipboard-autosync</code>.</p><h2 id="pinch-to-zoom-rotate-and-tilt-simulation" tabindex="-1">Pinch-to-zoom, rotate and tilt simulation <a class="header-anchor" href="#pinch-to-zoom-rotate-and-tilt-simulation" aria-label="Permalink to &quot;Pinch-to-zoom, rotate and tilt simulation&quot;">​</a></h2><p>To simulate &quot;pinch-to-zoom&quot;: <kbd>Ctrl</kbd>+<em>click-and-move</em>.</p><p>More precisely, hold down <kbd>Ctrl</kbd> while pressing the left-click button. Until the left-click button is released, all mouse movements scale and rotate the content (if supported by the app) relative to the center of the screen.</p><p><a href="https://github.com/Genymobile/scrcpy/assets/543275/26c4a920-9805-43f1-8d4c-608752d04767" target="_blank" rel="noreferrer">https://github.com/Genymobile/scrcpy/assets/543275/26c4a920-9805-43f1-8d4c-608752d04767</a></p><p>To simulate a vertical tilt gesture: <kbd>Shift</kbd>+<em>click-and-move-up-or-down</em>.</p><p><a href="https://github.com/Genymobile/scrcpy/assets/543275/1e252341-4a90-4b29-9d11-9153b324669f" target="_blank" rel="noreferrer">https://github.com/Genymobile/scrcpy/assets/543275/1e252341-4a90-4b29-9d11-9153b324669f</a></p><p>Similarly, to simulate a horizontal tilt gesture: <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<em>click-and-move-left-or-right</em>.</p><p>Technically, <em>scrcpy</em> generates additional touch events from a &quot;virtual finger&quot; at a location inverted through the center of the screen. When pressing <kbd>Ctrl</kbd> the <em>x</em> and <em>y</em> coordinates are inverted. Using <kbd>Shift</kbd> only inverts <em>x</em>, whereas using <kbd>Ctrl</kbd>+<kbd>Shift</kbd> only inverts <em>y</em>.</p><p>This only works for the default mouse mode (<code>--mouse=sdk</code>).</p><h2 id="file-drop" tabindex="-1">File drop <a class="header-anchor" href="#file-drop" aria-label="Permalink to &quot;File drop&quot;">​</a></h2><h3 id="install-apk" tabindex="-1">Install APK <a class="header-anchor" href="#install-apk" aria-label="Permalink to &quot;Install APK&quot;">​</a></h3><p>To install an APK, drag &amp; drop an APK file (ending with <code>.apk</code>) to the <em>scrcpy</em> window.</p><p>There is no visual feedback, a log is printed to the console.</p><h3 id="push-file-to-device" tabindex="-1">Push file to device <a class="header-anchor" href="#push-file-to-device" aria-label="Permalink to &quot;Push file to device&quot;">​</a></h3><p>To push a file to <code>/sdcard/Download/</code> on the device, drag &amp; drop a (non-APK) file to the <em>scrcpy</em> window.</p><p>There is no visual feedback, a log is printed to the console.</p><p>The target directory can be changed on start:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --push-target=/sdcard/Movies/</span></span></code></pre></div>`,46),n=[o];function d(l,r,p,h,c,k){return s(),a("div",null,n)}const y=e(t,[["render",d]]);export{u as __pageData,y as default};
