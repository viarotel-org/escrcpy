import{_ as e,c as a,o as s,aj as i}from"./chunks/framework.MtKKuSHf.js";const u=JSON.parse('{"title":"Gamepad","description":"","frontmatter":{},"headers":[],"relativePath":"reference/scrcpy/gamepad.md","filePath":"en/reference/scrcpy/gamepad.md","lastUpdated":1747291551000}'),t={name:"reference/scrcpy/gamepad.md"},o=i(`<h1 id="gamepad" tabindex="-1">Gamepad <a class="header-anchor" href="#gamepad" aria-label="Permalink to &quot;Gamepad&quot;">​</a></h1><p>Several gamepad input modes are available:</p><ul><li><code>--gamepad=disabled</code> (default)</li><li><code>--gamepad=uhid</code> (or <code>-G</code>): simulates physical HID gamepads using the UHID kernel module on the device</li><li><code>--gamepad=aoa</code>: simulates physical HID gamepads using the AOAv2 protocol</li></ul><h2 id="physical-gamepad-simulation" tabindex="-1">Physical gamepad simulation <a class="header-anchor" href="#physical-gamepad-simulation" aria-label="Permalink to &quot;Physical gamepad simulation&quot;">​</a></h2><p>Two modes allow to simulate physical HID gamepads on the device, one for each physical gamepad plugged into the computer.</p><h3 id="uhid" tabindex="-1">UHID <a class="header-anchor" href="#uhid" aria-label="Permalink to &quot;UHID&quot;">​</a></h3><p>This mode simulates physical HID gamepads using the <a href="https://kernel.org/doc/Documentation/hid/uhid.txt" target="_blank" rel="noreferrer">UHID</a> kernel module on the device.</p><p>To enable UHID gamepads, use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --gamepad=uhid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -G</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # short version</span></span></code></pre></div><p>Note: UHID may not work on old Android versions due to permission errors.</p><h3 id="aoa" tabindex="-1">AOA <a class="header-anchor" href="#aoa" aria-label="Permalink to &quot;AOA&quot;">​</a></h3><p>This mode simulates physical HID gamepads using the <a href="https://source.android.com/devices/accessories/aoa2#hid-support" target="_blank" rel="noreferrer">AOAv2</a> protocol.</p><p>To enable AOA gamepads, use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --gamepad=aoa</span></span></code></pre></div><p>Contrary to the other mode, it works at the USB level directly (so it only works over USB).</p><p>It does not use the scrcpy server, and does not require <code>adb</code> (USB debugging). Therefore, it is possible to control the device (but not mirror) even with USB debugging disabled (see <a href="/reference/scrcpy/otg">OTG</a>).</p><p>Note: For some reason, in this mode, Android detects multiple physical gamepads as a single misbehaving one. Use UHID if you need multiple gamepads.</p><p>Note: On Windows, it may only work in <a href="/reference/scrcpy/otg">OTG mode</a>, not while mirroring (it is not possible to open a USB device if it is already open by another process like the <em>adb daemon</em>).</p>`,18),d=[o];function r(p,n,l,h,c,m){return s(),a("div",null,d)}const k=e(t,[["render",r]]);export{u as __pageData,k as default};
