import{_ as e,c as s,o as a,aj as i}from"./chunks/framework.MtKKuSHf.js";const m=JSON.parse('{"title":"Mouse","description":"","frontmatter":{},"headers":[],"relativePath":"reference/scrcpy/mouse.md","filePath":"en/reference/scrcpy/mouse.md","lastUpdated":1747291551000}'),t={name:"reference/scrcpy/mouse.md"},n=i(`<h1 id="mouse" tabindex="-1">Mouse <a class="header-anchor" href="#mouse" aria-label="Permalink to &quot;Mouse&quot;">​</a></h1><p>Several mouse input modes are available:</p><ul><li><code>--mouse=sdk</code> (default)</li><li><code>--mouse=uhid</code> (or <code>-M</code>): simulates a physical HID mouse using the UHID kernel module on the device</li><li><code>--mouse=aoa</code>: simulates a physical HID mouse using the AOAv2 protocol</li><li><code>--mouse=disabled</code></li></ul><h2 id="sdk-mouse" tabindex="-1">SDK mouse <a class="header-anchor" href="#sdk-mouse" aria-label="Permalink to &quot;SDK mouse&quot;">​</a></h2><p>In this mode (<code>--mouse=sdk</code>, or if the parameter is omitted), mouse input events are injected at the Android API level with absolute coordinates.</p><p>Note that on some devices, an additional option must be enabled in developer options for this mouse mode to work. See <a href="/reference/scrcpy/#prerequisites">prerequisites</a>.</p><h3 id="mouse-hover" tabindex="-1">Mouse hover <a class="header-anchor" href="#mouse-hover" aria-label="Permalink to &quot;Mouse hover&quot;">​</a></h3><p>By default, mouse hover (mouse motion without any clicks) events are forwarded to the device. This can be disabled with:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scrcpy --no-mouse-hover</span></span></code></pre></div><h2 id="physical-mouse-simulation" tabindex="-1">Physical mouse simulation <a class="header-anchor" href="#physical-mouse-simulation" aria-label="Permalink to &quot;Physical mouse simulation&quot;">​</a></h2><p>Two modes allow to simulate a physical HID mouse on the device.</p><p>In these modes, the computer mouse is &quot;captured&quot;: the mouse pointer disappears from the computer and appears on the Android device instead.</p><p>The <a href="/reference/scrcpy/shortcuts">shortcut mod</a> (either <kbd>Alt</kbd> or <kbd>Super</kbd> by default) toggle (disable or enable) the mouse capture. Use one of them to give the control of the mouse back to the computer.</p><h3 id="uhid" tabindex="-1">UHID <a class="header-anchor" href="#uhid" aria-label="Permalink to &quot;UHID&quot;">​</a></h3><p>This mode simulates a physical HID mouse using the <a href="https://kernel.org/doc/Documentation/hid/uhid.txt" target="_blank" rel="noreferrer">UHID</a> kernel module on the device.</p><p>To enable UHID mouse, use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=uhid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -M</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # short version</span></span></code></pre></div><p>Note: UHID may not work on old Android versions due to permission errors.</p><h3 id="aoa" tabindex="-1">AOA <a class="header-anchor" href="#aoa" aria-label="Permalink to &quot;AOA&quot;">​</a></h3><p>This mode simulates a physical HID mouse using the <a href="https://source.android.com/devices/accessories/aoa2#hid-support" target="_blank" rel="noreferrer">AOAv2</a> protocol.</p><p>To enable AOA mouse, use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=aoa</span></span></code></pre></div><p>Contrary to the other modes, it works at the USB level directly (so it only works over USB).</p><p>It does not use the scrcpy server, and does not require <code>adb</code> (USB debugging). Therefore, it is possible to control the device (but not mirror) even with USB debugging disabled (see <a href="/reference/scrcpy/otg">OTG</a>).</p><p>Note: On Windows, it may only work in <a href="/reference/scrcpy/otg">OTG mode</a>, not while mirroring (it is not possible to open a USB device if it is already open by another process like the <em>adb daemon</em>).</p><h2 id="mouse-bindings" tabindex="-1">Mouse bindings <a class="header-anchor" href="#mouse-bindings" aria-label="Permalink to &quot;Mouse bindings&quot;">​</a></h2><p>By default, with SDK mouse:</p><ul><li>right-click triggers <code>BACK</code> (or <code>POWER</code> on)</li><li>middle-click triggers <code>HOME</code></li><li>the 4th click triggers <code>APP_SWITCH</code></li><li>the 5th click expands the notification panel</li></ul><p>The secondary clicks may be forwarded to the device instead by pressing the <kbd>Shift</kbd> key (e.g. <kbd>Shift</kbd>+right-click injects a right click to the device).</p><p>In AOA and UHID mouse modes, the default bindings are reversed: all clicks are forwarded by default, and pressing <kbd>Shift</kbd> gives access to the shortcuts (since the cursor is handled on the device side, it makes more sense to forward all mouse buttons by default in these modes).</p><p>The shortcuts can be configured using <code>--mouse-bind=xxxx:xxxx</code> for any mouse mode. The argument must be one or two sequences (separated by <code>:</code>) of exactly 4 characters, one for each secondary click:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>                  .---- Shift + right click</span></span>
<span class="line"><span>       SECONDARY  |.--- Shift + middle click</span></span>
<span class="line"><span>        BINDINGS  ||.-- Shift + 4th click</span></span>
<span class="line"><span>                  |||.- Shift + 5th click</span></span>
<span class="line"><span>                  ||||</span></span>
<span class="line"><span>                  vvvv</span></span>
<span class="line"><span>--mouse-bind=xxxx:xxxx</span></span>
<span class="line"><span>             ^^^^</span></span>
<span class="line"><span>             ||||</span></span>
<span class="line"><span>   PRIMARY   ||| \`- 5th click</span></span>
<span class="line"><span>  BINDINGS   || \`-- 4th click</span></span>
<span class="line"><span>             | \`--- middle click</span></span>
<span class="line"><span>              \`---- right click</span></span></code></pre></div><p>Each character must be one of the following:</p><ul><li><code>+</code>: forward the click to the device</li><li><code>-</code>: ignore the click</li><li><code>b</code>: trigger shortcut <code>BACK</code> (or turn screen on if off)</li><li><code>h</code>: trigger shortcut <code>HOME</code></li><li><code>s</code>: trigger shortcut <code>APP_SWITCH</code></li><li><code>n</code>: trigger shortcut &quot;expand notification panel&quot;</li></ul><p>For example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=bhsn:++++</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # the default mode for SDK mouse</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=++++:bhsn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # the default mode for AOA and UHID</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=++bh:++sn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # forward right and middle clicks,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                               # use 4th and 5th for BACK and HOME,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                               # use Shift+4th and Shift+5th for APP_SWITCH</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                               # and expand notification panel</span></span></code></pre></div><p>The second sequence of bindings may be omitted. In that case, it is the same as the first one:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=bhsn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=bhsn:bhsn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # equivalent</span></span></code></pre></div>`,38),o=[n];function l(d,c,h,p,r,u){return a(),s("div",null,o)}const b=e(t,[["render",l]]);export{m as __pageData,b as default};
