import{_ as s,c as i,o as a,aj as n}from"./chunks/framework.MtKKuSHf.js";const g=JSON.parse('{"title":"Build（编译）","description":"","frontmatter":{"title":"Build（编译）"},"headers":[],"relativePath":"zhHans/reference/scrcpy/build.md","filePath":"zhHans/reference/scrcpy/build.md","lastUpdated":1747291551000}'),e={name:"zhHans/reference/scrcpy/build.md"},l=n(`<h1 id="编译-scrcpy" tabindex="-1">编译 scrcpy <a class="header-anchor" href="#编译-scrcpy" aria-label="Permalink to &quot;编译 scrcpy&quot;">​</a></h1><p>以下是编译 <em>scrcpy</em>（客户端和服务器）的说明。</p><p>如果只需构建并安装最新版本，请按照 <a href="/zhHans/reference/scrcpy/linux">linux.md</a> 中的简化流程操作。</p><h2 id="分支" tabindex="-1">分支 <a class="header-anchor" href="#分支" aria-label="Permalink to &quot;分支&quot;">​</a></h2><p>项目有两个主要分支：</p><ul><li><code>master</code>：包含最新发布版本。这是 GitHub 上的项目主页。</li><li><code>dev</code>：当前开发分支。所有提交到 <code>dev</code> 的代码将包含在下一个版本中。</li></ul><p>如需贡献代码，请基于最新的 <code>dev</code> 分支提交。</p><h2 id="要求" tabindex="-1">要求 <a class="header-anchor" href="#要求" aria-label="Permalink to &quot;要求&quot;">​</a></h2><p>需要 <a href="https://developer.android.com/studio/command-line/adb.html" target="_blank" rel="noreferrer">adb</a>。可从 <a href="https://developer.android.com/studio/releases/platform-tools.html" target="_blank" rel="noreferrer">Android SDK 平台工具</a> 获取，或通过系统包管理器安装（如 <code>adb</code>）。</p><p>在 Windows 上，下载 <a href="https://dl.google.com/android/repository/platform-tools-latest-windows.zip" target="_blank" rel="noreferrer">platform-tools</a> 并将以下文件解压到 <code>PATH</code> 可访问的目录：</p><ul><li><code>adb.exe</code></li><li><code>AdbWinApi.dll</code></li><li><code>AdbWinUsbApi.dll</code></li></ul><p>scrcpy 的发布版本中也包含这些文件。</p><p>客户端需要 <a href="https://en.wikipedia.org/wiki/FFmpeg" target="_blank" rel="noreferrer">FFmpeg</a> 和 <a href="https://en.wikipedia.org/wiki/Simple_DirectMedia_Layer" target="_blank" rel="noreferrer">LibSDL2</a>。请按照说明安装。</p><h2 id="系统特定步骤" tabindex="-1">系统特定步骤 <a class="header-anchor" href="#系统特定步骤" aria-label="Permalink to &quot;系统特定步骤&quot;">​</a></h2><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><p>通过包管理器安装所需依赖。</p><h4 id="debian-ubuntu" tabindex="-1">Debian/Ubuntu <a class="header-anchor" href="#debian-ubuntu" aria-label="Permalink to &quot;Debian/Ubuntu&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行时依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libsdl2-2.0-0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb-1.0-0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja-build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libsdl2-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 libavcodec-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavdevice-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavformat-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavutil-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 libswresample-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb-1.0-0-dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务器构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-17-jdk</span></span></code></pre></div><p>在旧版本（如 Ubuntu 16.04）中，<code>meson</code> 可能过旧。此时可通过 <code>pip3</code> 安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python3-pip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span></span></code></pre></div><h4 id="fedora" tabindex="-1">Fedora <a class="header-anchor" href="#fedora" aria-label="Permalink to &quot;Fedora&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启用 RPM Fusion Free</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %fedora</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.noarch.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SDL2-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffms2-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb1-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libavdevice-free-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 服务器构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java-devel</span></span></code></pre></div><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><h4 id="从-linux-交叉编译" tabindex="-1">从 Linux 交叉编译 <a class="header-anchor" href="#从-linux-交叉编译" aria-label="Permalink to &quot;从 Linux 交叉编译&quot;">​</a></h4><p>这是推荐的方法（也是发布版本的构建方式）。</p><p>在 <em>Debian</em> 中安装 <em>mingw</em>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libz-mingw-w64-dev</span></span></code></pre></div><p>还需安装 JDK 以构建服务器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-17-jdk</span></span></code></pre></div><p>然后生成发布版本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./release.sh</span></span></code></pre></div><p>生成的 win32 和 win64 版本将位于 <code>dist/</code> 目录。</p><h4 id="在-msys2-中构建" tabindex="-1">在 MSYS2 中构建 <a class="header-anchor" href="#在-msys2-中构建" aria-label="Permalink to &quot;在 MSYS2 中构建&quot;">​</a></h4><p>在 Windows 上，需要 <a href="http://www.msys2.org/" target="_blank" rel="noreferrer">MSYS2</a> 来构建项目。在 MSYS2 终端中安装所需依赖：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行时依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-x86_64-SDL2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-libusb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-x86_64-make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-pkg-config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-x86_64-meson</span></span></code></pre></div><p>对于 32 位版本，将 <code>x86_64</code> 替换为 <code>i686</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行时依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-i686-SDL2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-ffmpeg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-libusb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-i686-make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-pkg-config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          mingw-w64-i686-meson</span></span></code></pre></div><p>MSYS2 中没有 Java（&gt;= 7），如需构建服务器，请手动安装并将其添加到 <code>PATH</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="mac-os" tabindex="-1">Mac OS <a class="header-anchor" href="#mac-os" aria-label="Permalink to &quot;Mac OS&quot;">​</a></h3><p>使用 <a href="https://brew.sh/" target="_blank" rel="noreferrer">Homebrew</a> 安装依赖：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行时依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sdl2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ffmpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libusb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 客户端构建依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> meson</span></span></code></pre></div><p>如需构建服务器，还需从 Caskroom 安装 Java 17 并添加到 <code>PATH</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> homebrew/cask-versions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> adoptopenjdk/openjdk/adoptopenjdk17</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/libexec/java_home</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.17</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAVA_HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h3><p>参考 <a href="https://github.com/pierlon/scrcpy-docker" target="_blank" rel="noreferrer">pierlon/scrcpy-docker</a>。</p><h2 id="通用步骤" tabindex="-1">通用步骤 <a class="header-anchor" href="#通用步骤" aria-label="Permalink to &quot;通用步骤&quot;">​</a></h2><p><strong>以非 root 用户</strong>克隆项目：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Genymobile/scrcpy</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scrcpy</span></span></code></pre></div><h3 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h3><p>如果只需构建客户端（服务器二进制文件将被推送到 Android 设备，不依赖于系统架构），可以使用 <a href="#选项-2-使用预构建服务器">预构建服务器</a>（此时无需 Java 或 Android SDK）。</p><h4 id="选项-1-从源码构建所有内容" tabindex="-1">选项 1：从源码构建所有内容 <a class="header-anchor" href="#选项-1-从源码构建所有内容" aria-label="Permalink to &quot;选项 1：从源码构建所有内容&quot;">​</a></h4><p>安装 <a href="https://developer.android.com/studio/index.html" target="_blank" rel="noreferrer">Android SDK</a>（<em>Android Studio</em>），并设置 <code>ANDROID_SDK_ROOT</code> 环境变量。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_SDK_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Android/Sdk</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Mac</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_SDK_ROOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/Library/Android/sdk</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ANDROID_SDK_ROOT=%LOCALAPPDATA%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ndroid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dk</span></span></code></pre></div><p>然后构建：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --buildtype=release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --strip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Db_lto=true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 不要以 root 用户运行</span></span></code></pre></div><p><em>注意：<code>ninja</code> <a href="https://github.com/Genymobile/scrcpy/commit/4c49b27e9f6be02b8e63b508b60535426bd0291a" target="_blank" rel="noreferrer">必须</a> 以非 root 用户运行（只有 <code>ninja install</code> 需要 root 权限）。</em></p><h4 id="选项-2-使用预构建服务器" tabindex="-1">选项 2：使用预构建服务器 <a class="header-anchor" href="#选项-2-使用预构建服务器" aria-label="Permalink to &quot;选项 2：使用预构建服务器&quot;">​</a></h4><ul><li><a href="https://github.com/Genymobile/scrcpy/releases/download/v3.2/scrcpy-server-v3.2" target="_blank" rel="noreferrer"><code>scrcpy-server-v3.2</code></a><br><sub>SHA-256: <code>b920e0ea01936bf2482f4ba2fa985c22c13c621999e3d33b45baa5acfc1ea3d0</code></sub></li></ul><p>下载预构建服务器，并在 Meson 配置中指定路径：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --buildtype=release</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --strip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Db_lto=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -Dprebuilt_server=/path/to/scrcpy-server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 不要以 root 用户运行</span></span></code></pre></div><p>服务器仅与匹配的客户端版本兼容（此服务器适用于 <code>master</code> 分支）。</p><h3 id="不安装直接运行" tabindex="-1">不安装直接运行 <a class="header-anchor" href="#不安装直接运行" aria-label="Permalink to &quot;不安装直接运行&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [options]</span></span></code></pre></div><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><p>构建成功后，可以安装 <em>scrcpy</em> 到系统：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Windows 上无需 sudo</span></span></code></pre></div><p>安装的文件包括：</p><ul><li><code>/usr/local/bin/scrcpy</code>（主程序）</li><li><code>/usr/local/share/scrcpy/scrcpy-server</code>（推送到设备的服务器）</li><li><code>/usr/local/share/man/man1/scrcpy.1</code>（手册页）</li><li><code>/usr/local/share/icons/hicolor/256x256/apps/icon.png</code>（应用图标）</li><li><code>/usr/local/share/zsh/site-functions/_scrcpy</code>（zsh 补全）</li><li><code>/usr/local/share/bash-completion/completions/scrcpy</code>（bash 补全）</li></ul><p>之后可直接运行 <code>scrcpy</code>。</p><h3 id="卸载" tabindex="-1">卸载 <a class="header-anchor" href="#卸载" aria-label="Permalink to &quot;卸载&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Cx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Windows 上无需 sudo</span></span></code></pre></div>`,72),h=[l];function t(p,k,d,r,o,c){return a(),i("div",null,h)}const y=s(e,[["render",t]]);export{g as __pageData,y as default};
