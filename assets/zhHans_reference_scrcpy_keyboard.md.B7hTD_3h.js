import{_ as a,c as e,o as s,aj as i}from"./chunks/framework.MtKKuSHf.js";const u=JSON.parse('{"title":"keyboard（键盘）","description":"","frontmatter":{"title":"keyboard（键盘）"},"headers":[],"relativePath":"zhHans/reference/scrcpy/keyboard.md","filePath":"zhHans/reference/scrcpy/keyboard.md","lastUpdated":1747291551000}'),t={name:"zhHans/reference/scrcpy/keyboard.md"},d=i(`<h1 id="键盘" tabindex="-1">键盘 <a class="header-anchor" href="#键盘" aria-label="Permalink to &quot;键盘&quot;">​</a></h1><p>提供多种键盘输入模式：</p><ul><li><code>--keyboard=sdk</code>（默认模式）</li><li><code>--keyboard=uhid</code>（或简写为 <code>-K</code>）：通过设备的 UHID 内核模块模拟物理 HID 键盘</li><li><code>--keyboard=aoa</code>：通过 AOAv2 协议模拟物理 HID 键盘</li><li><code>--keyboard=disabled</code> 禁用键盘输入</li></ul><p>默认使用 <code>sdk</code> 模式，但如果经常使用 scrcpy，建议切换到 <a href="#uhid"><code>uhid</code></a> 模式并一次性配置键盘布局。</p><hr><h2 id="sdk-键盘模式" tabindex="-1">SDK 键盘模式 <a class="header-anchor" href="#sdk-键盘模式" aria-label="Permalink to &quot;SDK 键盘模式&quot;">​</a></h2><p>在此模式下（<code>--keyboard=sdk</code> 或省略参数时），键盘输入事件通过 Android API 层级注入。该模式通用性强，但仅支持 ASCII 和部分其他字符。</p><p>注意：某些设备需在开发者选项中启用额外设置才能使此模式正常工作，详见<a href="/reference/scrcpy/#prerequisites">前提条件</a>。</p><p>以下参数（专用于 <code>--keyboard=sdk</code>）可自定义行为：</p><h3 id="文本注入偏好" tabindex="-1">文本注入偏好 <a class="header-anchor" href="#文本注入偏好" aria-label="Permalink to &quot;文本注入偏好&quot;">​</a></h3><p>输入文本时会生成两种<a href="https://blog.rom1v.com/2018/03/introducing-scrcpy/#handle-text-input" target="_blank" rel="noreferrer">事件</a>：</p><ul><li><strong>按键事件</strong>：表示按键的按下或释放；</li><li><strong>文本事件</strong>：表示文本的输入。</li></ul><p>默认情况下，数字和“特殊字符”通过文本事件插入，而字母通过按键事件注入（以便在游戏中正常响应 WASD 等按键）。</p><p>但此行为可能导致<a href="https://github.com/Genymobile/scrcpy/issues/650#issuecomment-512945343" target="_blank" rel="noreferrer">问题</a>。若遇到此类问题，可强制将字母作为文本注入（或直接切换至 <a href="#uhid">UHID</a> 模式）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefer-text</span></span></code></pre></div><p>（但这会破坏游戏中的键盘行为）</p><p>反之，也可强制始终使用原始按键事件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --raw-key-events</span></span></code></pre></div><h3 id="按键重复" tabindex="-1">按键重复 <a class="header-anchor" href="#按键重复" aria-label="Permalink to &quot;按键重复&quot;">​</a></h3><p>默认情况下，长按按键会生成重复的按键事件。某些游戏中这些事件无用且可能导致性能问题。</p><p>禁用重复按键事件转发：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-key-repeat</span></span></code></pre></div><hr><h2 id="物理键盘模拟" tabindex="-1">物理键盘模拟 <a class="header-anchor" href="#物理键盘模拟" aria-label="Permalink to &quot;物理键盘模拟&quot;">​</a></h2><p>两种模式可在设备上模拟物理 HID 键盘。为确保正常工作，需在设备上一次性配置与计算机匹配的键盘布局。</p><p>可通过以下方式打开配置页面：</p><ul><li>使用 <code>uhid</code> 或 <code>aoa</code> 模式时，在 scrcpy 窗口中按 <kbd>MOD</kbd>+<kbd>k</kbd>（见<a href="/zhHans/reference/scrcpy/shortcuts">快捷键</a>）</li><li>在设备上进入：设置 → 系统 → 语言与输入 → 物理键盘</li><li>通过计算机终端执行：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shell</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> am</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> android.settings.HARD_KEYBOARD_SETTINGS</span></span></code></pre></div></li></ul><p>在此配置页面中，还可启用或禁用屏幕键盘。</p><h3 id="uhid-模式" tabindex="-1">UHID 模式 <a class="header-anchor" href="#uhid-模式" aria-label="Permalink to &quot;UHID 模式&quot;">​</a></h3><p>此模式通过设备的 <a href="https://kernel.org/doc/Documentation/hid/uhid.txt" target="_blank" rel="noreferrer">UHID</a> 内核模块模拟物理 HID 键盘。</p><p>启用 UHID 键盘：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keyboard=uhid</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -K</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 简写形式</span></span></code></pre></div><p>配置键盘布局后（见上文），这是镜像时使用键盘的最佳模式：</p><ul><li>支持所有字符和输入法（与 <code>--keyboard=sdk</code> 不同）</li><li>可禁用屏幕键盘（与 <code>--keyboard=sdk</code> 不同）</li><li>支持 TCP/IP 无线连接（与 <code>--keyboard=aoa</code> 不同）</li><li>在 Windows 上无兼容问题（与 <code>--keyboard=aoa</code> 不同）</li></ul><p>缺点是由于权限问题，旧版 Android 可能无法使用此模式。</p><h3 id="aoa-模式" tabindex="-1">AOA 模式 <a class="header-anchor" href="#aoa-模式" aria-label="Permalink to &quot;AOA 模式&quot;">​</a></h3><p>此模式通过 <a href="https://source.android.com/devices/accessories/aoa2#hid-support" target="_blank" rel="noreferrer">AOAv2</a> 协议模拟物理 HID 键盘。</p><p>启用 AOA 键盘：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --keyboard=aoa</span></span></code></pre></div><p>与其他模式不同，AOA 直接在 USB 层级工作（仅支持有线连接）。</p><p>它不使用 scrcpy 服务端，且无需 <code>adb</code>（USB 调试）。因此，即使关闭 USB 调试，仍可控制设备（但不支持镜像，见 <a href="/zhHans/reference/scrcpy/otg">OTG</a>）。</p><p>注意：在 Windows 上，此模式可能仅支持 <a href="/zhHans/reference/scrcpy/otg">OTG 模式</a>，镜像时无法使用（若 USB 设备已被其他进程如 <em>adb 守护进程</em> 占用，则无法重复打开）。</p>`,42),r=[d];function p(h,o,l,n,c,k){return s(),e("div",null,r)}const g=a(t,[["render",p]]);export{u as __pageData,g as default};
