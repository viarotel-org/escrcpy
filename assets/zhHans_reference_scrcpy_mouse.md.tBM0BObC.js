import{_ as s,c as a,o as e,aj as i}from"./chunks/framework.MtKKuSHf.js";const b=JSON.parse('{"title":"Mouse（鼠标）","description":"","frontmatter":{"title":"Mouse（鼠标）"},"headers":[],"relativePath":"zhHans/reference/scrcpy/mouse.md","filePath":"zhHans/reference/scrcpy/mouse.md","lastUpdated":1747291551000}'),n={name:"zhHans/reference/scrcpy/mouse.md"},p=i(`<h1 id="鼠标" tabindex="-1">鼠标 <a class="header-anchor" href="#鼠标" aria-label="Permalink to &quot;鼠标&quot;">​</a></h1><p>提供多种鼠标输入模式：</p><ul><li><code>--mouse=sdk</code>（默认模式）</li><li><code>--mouse=uhid</code>（或 <code>-M</code>）：通过设备的 UHID 内核模块模拟物理 HID 鼠标</li><li><code>--mouse=aoa</code>：通过 AOAv2 协议模拟物理 HID 鼠标</li><li><code>--mouse=disabled</code></li></ul><h2 id="sdk-鼠标模式" tabindex="-1">SDK 鼠标模式 <a class="header-anchor" href="#sdk-鼠标模式" aria-label="Permalink to &quot;SDK 鼠标模式&quot;">​</a></h2><p>在此模式下（<code>--mouse=sdk</code> 或省略参数时），鼠标输入事件会以绝对坐标的形式通过 Android API 注入设备。</p><p>注意：在某些设备上，开发者选项中需启用额外选项才能使此模式生效。详见<a href="/zhHans/reference/scrcpy/#prerequisites">前提条件</a>。</p><h3 id="鼠标悬停" tabindex="-1">鼠标悬停 <a class="header-anchor" href="#鼠标悬停" aria-label="Permalink to &quot;鼠标悬停&quot;">​</a></h3><p>默认情况下，鼠标悬停（无点击的鼠标移动）事件会被转发到设备。可通过以下命令禁用：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>scrcpy --no-mouse-hover</span></span></code></pre></div><h2 id="物理鼠标模拟" tabindex="-1">物理鼠标模拟 <a class="header-anchor" href="#物理鼠标模拟" aria-label="Permalink to &quot;物理鼠标模拟&quot;">​</a></h2><p>有两种模式可在设备上模拟物理 HID 鼠标。</p><p>在这些模式下，计算机鼠标会被“捕获”：鼠标指针从计算机消失，转而出现在 Android 设备上。</p><p>通过<a href="/zhHans/reference/scrcpy/shortcuts">快捷键修饰键</a>（默认为 <kbd>Alt</kbd> 或 <kbd>Super</kbd>）可切换（禁用或启用）鼠标捕获功能。使用其中之一可将鼠标控制权交还给计算机。</p><h3 id="uhid-模式" tabindex="-1">UHID 模式 <a class="header-anchor" href="#uhid-模式" aria-label="Permalink to &quot;UHID 模式&quot;">​</a></h3><p>此模式通过设备的 <a href="https://kernel.org/doc/Documentation/hid/uhid.txt" target="_blank" rel="noreferrer">UHID</a> 内核模块模拟物理 HID 鼠标。</p><p>启用 UHID 鼠标模式的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=uhid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -M</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 简写形式</span></span></code></pre></div><p>注意：由于权限问题，UHID 在旧版 Android 上可能无法工作。</p><h3 id="aoa-模式" tabindex="-1">AOA 模式 <a class="header-anchor" href="#aoa-模式" aria-label="Permalink to &quot;AOA 模式&quot;">​</a></h3><p>此模式通过 <a href="https://source.android.com/devices/accessories/aoa2#hid-support" target="_blank" rel="noreferrer">AOAv2</a> 协议模拟物理 HID 鼠标。</p><p>启用 AOA 鼠标模式的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse=aoa</span></span></code></pre></div><p>与其他模式不同，此模式直接在 USB 层面工作（因此仅支持 USB 连接）。</p><p>它不使用 scrcpy 服务端，也不依赖 <code>adb</code>（USB 调试）。因此，即使 USB 调试被禁用，仍可控制设备（但无法镜像）。详见 <a href="/zhHans/reference/scrcpy/otg">OTG</a>。</p><p>注意：在 Windows 上，此模式可能仅在 <a href="/zhHans/reference/scrcpy/otg">OTG 模式</a>下有效，镜像时无效（如果 USB 设备已被其他进程如 <em>adb 守护进程</em> 占用，则无法打开）。</p><h2 id="鼠标按键绑定" tabindex="-1">鼠标按键绑定 <a class="header-anchor" href="#鼠标按键绑定" aria-label="Permalink to &quot;鼠标按键绑定&quot;">​</a></h2><p>默认情况下，在 SDK 鼠标模式下：</p><ul><li>右键触发 <code>BACK</code>（或点亮屏幕）</li><li>中键触发 <code>HOME</code></li><li>第四键触发 <code>APP_SWITCH</code></li><li>第五键展开通知面板</li></ul><p>通过按住 <kbd>Shift</kbd> 键，可将次要点击事件转发到设备（例如 <kbd>Shift</kbd>+右键会向设备注入右键点击）。</p><p>在 AOA 和 UHID 鼠标模式下，默认绑定相反：所有点击默认被转发，按住 <kbd>Shift</kbd> 可触发快捷键（由于光标由设备端处理，在此模式下默认转发所有鼠标按键更合理）。</p><p>可通过 <code>--mouse-bind=xxxx:xxxx</code> 配置任何鼠标模式的快捷键。参数必须为一或两组（用 <code>:</code> 分隔）共 4 个字符的序列，分别对应每次次要点击：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>                .---- Shift + 右键  </span></span>
<span class="line"><span>       次要绑定 |.--- Shift + 中键  </span></span>
<span class="line"><span>               ||.-- Shift + 第四键  </span></span>
<span class="line"><span>               |||.- Shift + 第五键  </span></span>
<span class="line"><span>               ||||  </span></span>
<span class="line"><span>               vvvv  </span></span>
<span class="line"><span>--mouse-bind=xxxx:xxxx  </span></span>
<span class="line"><span>             ^^^^  </span></span>
<span class="line"><span>             ||||  </span></span>
<span class="line"><span>   主要绑定   ||| \`- 第五键  </span></span>
<span class="line"><span>             || \`-- 第四键  </span></span>
<span class="line"><span>             | \`--- 中键  </span></span>
<span class="line"><span>              \`---- 右键</span></span></code></pre></div><p>每个字符必须为以下之一：</p><ul><li><code>+</code>：转发点击到设备</li><li><code>-</code>：忽略点击</li><li><code>b</code>：触发快捷键 <code>BACK</code>（或点亮屏幕）</li><li><code>h</code>：触发快捷键 <code>HOME</code></li><li><code>s</code>：触发快捷键 <code>APP_SWITCH</code></li><li><code>n</code>：触发快捷键“展开通知面板”</li></ul><p>例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=bhsn:++++</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # SDK 鼠标的默认模式  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=++++:bhsn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # AOA 和 UHID 的默认模式  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=++bh:++sn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 转发右键和中键点击，  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                               # 使用第四键和第五键触发 BACK 和 HOME，  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                               # 使用 Shift+第四键 和 Shift+第五键 触发  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                               # APP_SWITCH 和展开通知面板</span></span></code></pre></div><p>第二组绑定可省略。此时其内容与第一组相同：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=bhsn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scrcpy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mouse-bind=bhsn:bhsn</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 等效</span></span></code></pre></div>`,38),l=[p];function t(h,d,c,o,r,k){return e(),a("div",null,l)}const g=s(n,[["render",t]]);export{b as __pageData,g as default};
